@model BlogProject.Application.DTOs.StatisticsDto
@{
    ViewData["Title"] = "Analytics Dashboard";
}

<div class="analytics-dashboard">
    <div class="dashboard-header">
        <h1>Analytics Dashboard</h1>
        <p class="text-muted">Comprehensive overview of your blog's performance</p>
    </div>

    <!-- Main Stats Cards -->
    <div class="stats-grid">
        <div class="stat-card primary-gradient">
            <div class="stat-icon">
                <i class="fas fa-file-alt"></i>
            </div>
            <div class="stat-content">
                <h3>@Model.TotalPosts.ToString("N0")</h3>
                <p>Total Posts</p>
            </div>
            <div class="stat-footer">
                <small>Lifetime total</small>
            </div>
        </div>

        <div class="stat-card success-gradient">
            <div class="stat-icon">
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-content">
                <h3>@Model.TotalUsers.ToString("N0")</h3>
                <p>Total Users</p>
            </div>
            <div class="stat-footer">
                <small>Active community</small>
            </div>
        </div>

        <div class="stat-card info-gradient">
            <div class="stat-icon">
                <i class="fas fa-comments"></i>
            </div>
            <div class="stat-content">
                <h3>@Model.TotalComments.ToString("N0")</h3>
                <p>Total Comments</p>
            </div>
            <div class="stat-footer">
                <small>User engagement</small>
            </div>
        </div>

        <div class="stat-card warning-gradient">
            <div class="stat-icon">
                <i class="fas fa-eye"></i>
            </div>
            <div class="stat-content">
                <h3>@Model.TotalViews.ToString("N0")</h3>
                <p>Total Views</p>
            </div>
            <div class="stat-footer">
                <small>Content reach</small>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="charts-section">
        <div class="chart-row">
            <div class="chart-card">
                <div class="chart-header">
                    <h2>Content Performance</h2>
                    <div class="chart-actions">
                        <span class="badge bg-light text-dark">Last 30 days</span>
                    </div>
                </div>
                <div class="chart-body">
                    <canvas id="timelineChart"></canvas>
                </div>
            </div>
        </div>

        <div class="chart-row">
            <div class="chart-card">
                <div class="chart-header">
                    <h2>Category Distribution</h2>
                </div>
                <div class="chart-body">
                    <canvas id="categoriesChart"></canvas>
                </div>
            </div>

            <div class="chart-card">
                <div class="chart-header">
                    <h2>Popular Tags</h2>
                </div>
                <div class="chart-body">
                    <canvas id="tagsChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Performance Metrics -->
    <div class="metrics-section">
        <div class="metrics-card">
            <div class="metrics-header">
                <h2>Key Performance Metrics</h2>
            </div>
            <div class="metrics-grid">
                <div class="metric-item">
                    <div class="metric-icon">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="metric-content">
                        <h4>@Model.AverageViewsPerPost.ToString("N0")</h4>
                        <p>Avg. Views per Post</p>
                    </div>
                </div>
                <div class="metric-item">
                    <div class="metric-icon">
                        <i class="fas fa-comment-dots"></i>
                    </div>
                    <div class="metric-content">
                        <h4>@Model.AverageCommentsPerPost.ToString("N0")</h4>
                        <p>Avg. Comments per Post</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tables Section -->
    <div class="tables-section">
        <div class="table-row">
            <div class="table-card">
                <div class="table-header">
                    <h2>Top Contributors</h2>
                </div>
                <div class="table-body">
                    <div class="table-responsive">
                        <table class="custom-table">
                            <thead>
                                <tr>
                                    <th>Author</th>
                                    <th>Posts</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var author in Model.TopAuthors)
                                {
                                    <tr>
                                        <td>
                                            <div class="author-info">
                                                <div class="author-avatar">
                                                    <i class="fas fa-user-circle"></i>
                                                </div>
                                                <span>@author.Author</span>
                                            </div>
                                        </td>
                                        <td>@author.PostCount.ToString("N0")</td>
                                        <td>
                                            <span class="status-badge @(author.PostCount > 10 ? "active" : "normal")">
                                                @(author.PostCount > 10 ? "Top Author" : "Active")
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="table-card">
                <div class="table-header">
                    <h2>Most Viewed Content</h2>
                </div>
                <div class="table-body">
                    <div class="table-responsive">
                        <table class="custom-table">
                            <thead>
                                <tr>
                                    <th>Post Title</th>
                                    <th>Views</th>
                                    <th>Performance</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var post in Model.MostViewedPosts)
                                {
                                    <tr>
                                        <td>
                                            <div class="post-info">
                                                <i class="fas fa-file-alt"></i>
                                                <span>@post.Post</span>
                                            </div>
                                        </td>
                                        <td>@post.ViewCount.ToString("N0")</td>
                                        <td>
                                            <div class="performance-indicator">
                                                <div class="progress">
                                                    <div class="progress-bar" style="width: @(Math.Min((post.ViewCount / (double)Model.MostViewedPosts.Max(p => p.ViewCount)) * 100, 100))%"></div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Set Chart.js defaults
        Chart.defaults.font.family = "'Inter', system-ui, -apple-system, 'Segoe UI', Roboto, sans-serif";
        Chart.defaults.font.size = 13;
        Chart.defaults.color = '#64748b';

        // Timeline Chart
        const timelineCtx = document.getElementById('timelineChart').getContext('2d');
        new Chart(timelineCtx, {
            type: 'line',
            data: {
                labels: @Json.Serialize(Model.PostsOverTime.Select(x => x.Date.ToString("MMM dd")).ToList()),
                datasets: [{
                    label: 'Posts',
                    data: @Json.Serialize(Model.PostsOverTime.Select(x => x.Count).ToList()),
                    borderColor: '#6366f1',
                    backgroundColor: 'rgba(99, 102, 241, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });

        // Categories Chart
        const categoriesCtx = document.getElementById('categoriesChart').getContext('2d');
        new Chart(categoriesCtx, {
            type: 'doughnut',
            data: {
                labels: @Json.Serialize(Model.PostsByCategory.Keys),
                datasets: [{
                    data: @Json.Serialize(Model.PostsByCategory.Values),
                    backgroundColor: [
                        '#6366f1',
                        '#8b5cf6',
                        '#ec4899',
                        '#f43f5e',
                        '#f97316',
                        '#eab308'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right'
                    }
                }
            }
        });

        // Tags Chart
        const tagsCtx = document.getElementById('tagsChart').getContext('2d');
        new Chart(tagsCtx, {
            type: 'bar',
            data: {
                labels: @Json.Serialize(Model.PostsByTag.Keys),
                datasets: [{
                    label: 'Posts',
                    data: @Json.Serialize(Model.PostsByTag.Values),
                    backgroundColor: 'rgba(99, 102, 241, 0.8)',
                    borderRadius: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    </script>
}

<style>
    .analytics-dashboard {
        background-color: #f8fafc;
        padding: 2rem;
        min-height: 100vh;
    }

    .dashboard-header {
        margin-bottom: 2rem;
        text-align: center;
    }

        .dashboard-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            color: #0f172a;
            margin-bottom: 0.5rem;
        }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: #fff;
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .stat-card:hover {
            transform: translateY(-5px);
        }

    .primary-gradient {
        background: linear-gradient(135deg, #6366f1 0%, #818cf8 100%);
        color: white;
    }

    .success-gradient {
        background: linear-gradient(135deg, #10b981 0%, #34d399 100%);
        color: white;
    }

    .info-gradient {
        background: linear-gradient(135deg, #3b82f6 0%, #60a5fa 100%);
        color: white;
    }

    .warning-gradient {
        background: linear-gradient(135deg, #f59e0b 0%, #fbbf24 100%);
        color: white;
    }

    .stat-icon {
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    .stat-content h3 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .stat-footer {
        margin-top: 1rem;
        opacity: 0.8;
    }

    .charts-section {
        margin-bottom: 2rem;
    }

    .chart-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .chart-card {
        background: white;
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .chart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

        .chart-header h2 {
            font-size: 1.25rem;
            font-weight: 600;
            color: #0f172a;
        }

    .chart-body {
        height: 300px;
    }

    .metrics-section {
        margin-bottom: 2rem;
    }

    .metrics-card {
        background: white;
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .metrics-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-top: 1rem;
    }

    .metric-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: #f8fafc;
        border-radius: 0.5rem;
    }

    .metric-icon {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        background: #6366f1;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.25rem;
    }

    .metric-content h4 {
        font-size: 1.5rem;
        font-weight: 700;
        color: #0f172a;
        margin-bottom: 0.25rem;
    }

    .metric-content p {
        color: #64748b;
        font-size: 0.875rem;
    }

    .tables-section .table-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .table-card {
        background: white;
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .table-header {
        margin-bottom: 1.5rem;
    }

        .table-header h2 {
            font-size: 1.25rem;
            font-weight: 600;
            color: #0f172a;
        }

    .custom-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 0.5rem;
    }

        .custom-table th {
            padding: 1rem;
            color: #64748b;
            font-weight: 500;
            text-align: left;
        }

        .custom-table td {
            padding: 1rem;
            background: #f8fafc;
            color: #0f172a;
        }

        .custom-table tr:hover td {
            background: #f1f5f9;
        }

    .author-info, .post-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .author-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: #e2e8f0;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #64748b;
    }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
    }

        .status-badge.active {
            background: #dcfce7;
            color: #166534;
        }

        .status-badge.normal {
            background: #e2e8f0;
            color: #475569;
        }

    .performance-indicator {
        width: 100%;
    }

    .progress {
        height: 6px;
        background: #e2e8f0;
        border-radius: 3px;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background: #6366f1;
        border-radius: 3px;
        transition: width 0.3s ease;
    }

    @@media (max-width: 768px) {
        .analytics-dashboard {
            padding: 1rem;
        }

        .chart-row, .tables-section .table-row {
            grid-template-columns: 1fr;
        }

        .dashboard-header h1 {
            font-size: 2rem;
        }

        .stat-card {
            padding: 1rem;
        }

        .chart-card, .table-card {
            padding: 1rem;
        }

        .custom-table {
            font-size: 0.875rem;
        }
    }
</style>